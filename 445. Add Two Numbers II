/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode h1 = reverse(l1);
        ListNode h2 = reverse(l2);
        ListNode dummy = new ListNode(0);
        ListNode temp = dummy;
        int carry = 0;

        while (h1 != null || h2 != null || carry != 0) {
            int sum = (h1 != null ? h1.val : 0) + (h2 != null ? h2.val : 0);
            sum += carry;
            carry = sum / 10;
            ListNode t = new ListNode(sum % 10);
            temp.next = t;
            temp = t;
            if (h1 != null) h1 = h1.next;
            if (h2 != null) h2 = h2.next;
        }

        return reverse(dummy.next);
    }

    static ListNode reverse(ListNode head) {
        ListNode prev = null;
        while (head != null) {
            ListNode next = head.next;
            head.next = prev;
            prev = head;
            head = next;
        }
        return prev;
    }
}
