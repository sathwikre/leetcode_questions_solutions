class Solution {
    public List<String> findAndReplacePattern(String[] words, String pattern) {
        return list(words,pattern);
    }
    static List<String> list(String[] words,String pattern){
        List<String> ans=new ArrayList<>();
        for(int i=0;i<words.length;i++){
            if(find(pattern,words[i])){
                ans.add(words[i]);
            }
        }
        return ans;
    }
      static boolean find(String arr,String s){

        String[] val=s.split("");
        if(val.length!=arr.length()){
            return false;
        }
        HashMap<Character,String> map=new HashMap<>();
        for(int i=0;i<val.length;i++){
            char ch=arr.charAt(i);
            if(!map.containsKey(ch)){
                  if (map.containsValue(val[i])) {
                    return false;
                }
                map.put(ch,val[i]);
            }else{
                if (!map.get(ch).equals(val[i])){
                    return false;
                }
            }
        }
        return true;
    }
}
