class Solution {
    public int diagonalPrime(int[][] nums) {
       return find(nums) ;
    }
    static int find(int[][] arr){
        ArrayList<Integer> diagonal=new ArrayList<>();
        for(int i=0;i<arr.length;i++){
            diagonal.add(arr[i][i]);
        }
        int n=arr.length;
        for(int i=0;i<arr.length;i++){
            diagonal.add(arr[i][n - 1 - i] );
        }
        int max=0;
        for(int i=0;i<diagonal.size();i++){
            if(prime(diagonal.get(i))){
                max=Math.max(diagonal.get(i),max);
            }
        }
        
        return  max;
    }
    static boolean prime(int n){
          if (n <= 1) return false; 
        for(int i=2;i*i<=n;i++){
            if(n%i==0){
                return false;
            }
        }
        return true;
    }
}
