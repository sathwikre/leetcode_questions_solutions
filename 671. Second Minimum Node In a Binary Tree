/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
       return find(root) ;
    }
     static int find(TreeNode root){
        ArrayList<Integer> ans=new ArrayList<>();
        values(root,ans);
          Set<Integer> set = new TreeSet<>(ans); 
        if (set.size() < 2) return -1;
        ArrayList<Integer> uniqueSorted = new ArrayList<>(set);
        return uniqueSorted.get(1);
        
    }
    static void values(TreeNode node,ArrayList<Integer> ans){
        if(node==null){
            return;
        }
        values(node.left,ans);
        ans.add(node.val);
        values(node.right,ans);
    }
}
