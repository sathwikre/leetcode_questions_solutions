
class Solution {
    public int[] sortEvenOdd(int[] nums) {
        return find(nums);
    }

    static int[] find(int[] arr) {
        ArrayList<Integer> evenList = new ArrayList<>();
        ArrayList<Integer> oddList = new ArrayList<>();
        for (int i = 0; i < arr.length; i++) {
            if (i % 2 == 0) {
                evenList.add(arr[i]);
            } else {
                oddList.add(arr[i]);
            }
        }

        Collections.sort(evenList);

        Collections.sort(oddList, Collections.reverseOrder());

        int[] result = new int[arr.length];
        int evenIndex = 0, oddIndex = 0;

        for (int i = 0; i < arr.length; i++) {
            if (i % 2 == 0) {
                result[i] = evenList.get(evenIndex++);
            } else {
                result[i] = oddList.get(oddIndex++);
            }
        }

        return result;
    }
}
