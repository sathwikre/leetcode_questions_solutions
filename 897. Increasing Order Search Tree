/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode increasingBST(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        fb(root, ans);
        
        TreeNode dummy = new TreeNode(0);
        TreeNode current = dummy;
        
        for (int i = 0; i < ans.size(); i++) {
            current.right = new TreeNode(ans.get(i));
            current = current.right;
        }

        return dummy.right;
    }

    private void fb(TreeNode root, List<Integer> ans) {
        if (root == null) return;
        fb(root.left, ans);      
        ans.add(root.val);           
        fb(root.right, ans);    
    }
}
