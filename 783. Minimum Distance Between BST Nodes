/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int minDiffInBST(TreeNode root) {
   return find(root);
    }
    static int find(TreeNode root){
        ArrayList<Integer> ans=new ArrayList<>();
        values(root,ans);
       int minDiff = Integer.MAX_VALUE;

        for (int i = 1; i < ans.size(); i++) {
            minDiff = Math.min(minDiff, ans.get(i) - ans.get(i - 1));
        }

        return minDiff;

    }
    static void values(TreeNode node,ArrayList<Integer> ans){
        if(node==null){
            return;
        }
        values(node.left,ans);
        ans.add(node.val);
        values(node.right,ans);
    }
}
